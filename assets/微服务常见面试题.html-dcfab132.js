const e=JSON.parse('{"key":"v-ca3b989e","path":"/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.html","title":"常见面试题","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1.微服务篇","slug":"_1-微服务篇","link":"#_1-微服务篇","children":[{"level":4,"title":"1.1.SpringCloud常见组件有哪些？","slug":"_1-1-springcloud常见组件有哪些","link":"#_1-1-springcloud常见组件有哪些","children":[]},{"level":4,"title":"1.2.Nacos的服务注册表结构是怎样的？","slug":"_1-2-nacos的服务注册表结构是怎样的","link":"#_1-2-nacos的服务注册表结构是怎样的","children":[]},{"level":4,"title":"1.3.Nacos如何支撑阿里内部数十万服务注册压力？","slug":"_1-3-nacos如何支撑阿里内部数十万服务注册压力","link":"#_1-3-nacos如何支撑阿里内部数十万服务注册压力","children":[]},{"level":4,"title":"1.4.Nacos如何避免并发读写冲突问题？","slug":"_1-4-nacos如何避免并发读写冲突问题","link":"#_1-4-nacos如何避免并发读写冲突问题","children":[]},{"level":4,"title":"1.5.Nacos与Eureka的区别有哪些？","slug":"_1-5-nacos与eureka的区别有哪些","link":"#_1-5-nacos与eureka的区别有哪些","children":[]},{"level":4,"title":"1.6.Sentinel的限流与Gateway的限流有什么差别？","slug":"_1-6-sentinel的限流与gateway的限流有什么差别","link":"#_1-6-sentinel的限流与gateway的限流有什么差别","children":[]},{"level":4,"title":"1.7.Sentinel的线程隔离与Hystix的线程隔离有什么差别?","slug":"_1-7-sentinel的线程隔离与hystix的线程隔离有什么差别","link":"#_1-7-sentinel的线程隔离与hystix的线程隔离有什么差别","children":[]}]},{"level":2,"title":"2.MQ篇","slug":"_2-mq篇","link":"#_2-mq篇","children":[{"level":4,"title":"2.1.你们为什么选择了RabbitMQ而不是其它的MQ？","slug":"_2-1-你们为什么选择了rabbitmq而不是其它的mq","link":"#_2-1-你们为什么选择了rabbitmq而不是其它的mq","children":[]},{"level":4,"title":"2.2.RabbitMQ如何确保消息的不丢失？","slug":"_2-2-rabbitmq如何确保消息的不丢失","link":"#_2-2-rabbitmq如何确保消息的不丢失","children":[]},{"level":4,"title":"2.3.RabbitMQ如何避免消息堆积？","slug":"_2-3-rabbitmq如何避免消息堆积","link":"#_2-3-rabbitmq如何避免消息堆积","children":[]},{"level":4,"title":"2.4.RabbitMQ如何保证消息的有序性？","slug":"_2-4-rabbitmq如何保证消息的有序性","link":"#_2-4-rabbitmq如何保证消息的有序性","children":[]},{"level":4,"title":"2.5.如何防止MQ消息被重复消费？","slug":"_2-5-如何防止mq消息被重复消费","link":"#_2-5-如何防止mq消息被重复消费","children":[]},{"level":4,"title":"2.6.如何保证RabbitMQ的高可用？","slug":"_2-6-如何保证rabbitmq的高可用","link":"#_2-6-如何保证rabbitmq的高可用","children":[]},{"level":4,"title":"2.7.使用MQ可以解决那些问题？","slug":"_2-7-使用mq可以解决那些问题","link":"#_2-7-使用mq可以解决那些问题","children":[]}]},{"level":2,"title":"3.Redis篇","slug":"_3-redis篇","link":"#_3-redis篇","children":[{"level":4,"title":"3.1.Redis与Memcache的区别？","slug":"_3-1-redis与memcache的区别","link":"#_3-1-redis与memcache的区别","children":[]},{"level":4,"title":"3.2.Redis的单线程问题","slug":"_3-2-redis的单线程问题","link":"#_3-2-redis的单线程问题","children":[]},{"level":4,"title":"3.2.Redis的持久化方案由哪些？","slug":"_3-2-redis的持久化方案由哪些","link":"#_3-2-redis的持久化方案由哪些","children":[]},{"level":4,"title":"3.3.Redis的集群方式有哪些？","slug":"_3-3-redis的集群方式有哪些","link":"#_3-3-redis的集群方式有哪些","children":[]},{"level":4,"title":"3.4.Redis的常用数据类型有哪些？","slug":"_3-4-redis的常用数据类型有哪些","link":"#_3-4-redis的常用数据类型有哪些","children":[]},{"level":4,"title":"3.5.聊一下Redis事务机制","slug":"_3-5-聊一下redis事务机制","link":"#_3-5-聊一下redis事务机制","children":[]},{"level":4,"title":"3.6.Redis的Key过期策略","slug":"_3-6-redis的key过期策略","link":"#_3-6-redis的key过期策略","children":[]},{"level":4,"title":"3.7.Redis在项目中的哪些地方有用到?","slug":"_3-7-redis在项目中的哪些地方有用到","link":"#_3-7-redis在项目中的哪些地方有用到","children":[]},{"level":4,"title":"3.8.Redis的缓存击穿、缓存雪崩、缓存穿透","slug":"_3-8-redis的缓存击穿、缓存雪崩、缓存穿透","link":"#_3-8-redis的缓存击穿、缓存雪崩、缓存穿透","children":[]},{"level":4,"title":"3.9.缓存冷热数据分离","slug":"_3-9-缓存冷热数据分离","link":"#_3-9-缓存冷热数据分离","children":[]},{"level":4,"title":"3.10.Redis实现分布式锁","slug":"_3-10-redis实现分布式锁","link":"#_3-10-redis实现分布式锁","children":[]},{"level":4,"title":"3.11.如何实现数据库与缓存数据一致？","slug":"_3-11-如何实现数据库与缓存数据一致","link":"#_3-11-如何实现数据库与缓存数据一致","children":[]}]}],"git":{"updatedTime":1675397577000,"contributors":[{"name":"yffjglcms","email":"yffjglcms@gmail.com","commits":1}]},"filePathRelative":"面试题/微服务常见面试题.md"}');export{e as data};
